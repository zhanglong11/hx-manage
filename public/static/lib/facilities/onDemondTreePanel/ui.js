import{InternalTree}from"./internalTree";import{enumArray,throttle}from"../../util/functional";const PER_NODE_HEIGHT=36,MAX_PRE_EXTRA_NODES=2,MAX_POST_EXTRA_NODES=2;function makeElement(){const e=document.createElement("lmvheader"),t=document.createElement("icon"),i=document.createElement("div"),s=document.createElement("div"),n=document.createElement("label");return s.classList.add("visibility"),i.appendChild(e),e.appendChild(t),e.appendChild(s),e.appendChild(n),i.style.position="absolute",i._header=e,i._icon=t,i._eye=s,i._label=n,i}function dealWithCollapseChange(e){return function(t){t.stopPropagation(),t.preventDefault();const i=this.parentElement.parentElement,s=i.getAttribute("model-id");if(!s)throw"dangling node";if(i.classList.contains("leaf"))return;const n=i.getAttribute("node-id"),o=i._level,r=i.classList.contains("expanded");e.collapse(s,n,o,r)}}function dealWithVisiblityChange(e){return function(t){t.stopPropagation(),t.preventDefault();const i=this.parentElement.parentElement,s=i.getAttribute("model-id");if(!s)throw"dangling node";const n=i.getAttribute("node-id"),o=i._level,r=i.classList.contains("dim");e.changeVisibility(s,n,o,r)}}class NodeGroupEnumer{constructor(e,t){let i=Math.min(e.length,t.length);this.nodes=e.slice(0,i),this.ids=t.slice(0,i),this._curGroupCursor=0,this._groupPoscursor=0}skip(e){if(this._curGroupCursor==this.nodes.length||0==e)return this;{let t=this.nodes[this._curGroupCursor].length-this._groupPoscursor;return e>t?(this._curGroupCursor++,this._groupPoscursor=0,this.skip(e-t)):(this._groupPoscursor+=e,this)}}next(){if(this._curGroupCursor>this.nodes.length-1)return{done:!0,value:null,id:null};{let e=this.nodes[this._curGroupCursor];if(this._groupPoscursor>e.length-1)return this._groupPoscursor=0,this._curGroupCursor++,this.next();{let t=e[this._groupPoscursor],i=this.ids[this._curGroupCursor];return this._groupPoscursor++,{done:!1,value:t,id:i}}}}}export class OnDemondTreeUI{constructor(e){this.container=e,this.treesMap={},this._trees=[],this._holdingNodes=[],this._modelDataMap={},this._modelIdSequence=[],this._modelTreeContainerMap={},this._onCollapseChange=dealWithCollapseChange(this),this._onVisibilityChange=dealWithVisiblityChange(this),this._wrapper=document.createElement("div"),this._wrapper.style.overflowY="hidden",this._treesContainer=document.createElement("div"),this._wrapper.appendChild(this._treesContainer),this._treesContainer.style.overflowY="hidden",this._treesContainer.className="docking-panel-container-gradient treeview on-demand",this._treesContainer.style.height="100%",this._nodesContainer=document.createElement("div"),this._nodesContainer.className="model-div",this._treesContainer.appendChild(this._nodesContainer),this.container.appendChild(this._wrapper),this._onScroll=throttle(this.handleScroll.bind(this),30),this.container.addEventListener("scroll",this._onScroll),this._currentViewPortHeight=0,this._nodesQuantityShowInViewport=0,this._curScrollTop=0,this.recalcViewPortHeight()}handleScroll(e){this._curScrollTop=e.target.scrollTop,this.redraw(),e.stopPropagation()}recalcViewPortHeight(){this.container;this._currentViewPortHeight=this.container.getBoundingClientRect().height,this._nodesQuantityShowInViewport=Math.ceil(this._currentViewPortHeight/36)}addModel(e,t){if("string"!=typeof e&&(e=e.toString()),this._modelDataMap[e])return;this._modelDataMap[e]=t,this._modelIdSequence.push(e);let i=new InternalTree(e,t);this.treesMap[e]=i,this._trees.push(i),this.redraw()}_getModelTreeContainer(e){return this._modelTreeContainerMap[e]}createNodeElement(){let e=makeElement();return e._eye.addEventListener("click",this._onVisibilityChange),e._icon.addEventListener("click",this._onCollapseChange),e}_dealWithHoldingNodes(e){if(e!=this._holdingNodes.length)if(e>this._holdingNodes.length){let t=e-this._holdingNodes.length;for(let e=0;e<t;e++)this._holdingNodes.push(this.createNodeElement())}else this._holdingNodes.splice(e)}collapse(e,t,i,s){let n=this.treesMap[e];if(!n)throw"Unkonwn modelId";n.setCollapse(t,i,s),this.redraw()}changeVisibility(e,t,i,s){let n=this.treesMap[e];if(!n)throw"Unkonwn modelId";n.setVisibility(t,i,s),this.redraw()}_bindNodeInfo(e,t,i){const s=t.getData();e.setAttribute("node-id",t.id),e.setAttribute("model-id",i),e.className="",e._label.innerHTML=s.name,t.isLeaf()?e.classList.add("leaf"):(e.classList.add("group"),t.isCollapsed()?e.classList.add("collapsed"):e.classList.add("expanded")),t.isVisible()?e.classList.add("visible"):e.classList.add("dim");let n=t.getLevel();e._level=n,e._header.style.paddingLeft=`${13+25*n}px`}_calcPrevNodesCount(e){let t=Math.floor(e/36);return Math.min(t,2)}redraw(e){e=e||this._curScrollTop;let t=this._calcPrevNodesCount(e),i=this._nodesQuantityShowInViewport,s=this._trees.map(e=>e.getShowingNodes());this._wrapper.style.height=`${36*s.flat().length}px`;let n=t+i+2;this._dealWithHoldingNodes(n);let o=enumArray(this._holdingNodes),r=new NodeGroupEnumer(s,this._modelIdSequence),l=Math.floor(e/36);r.skip(l-t);let a=r.next(),h=document.createDocumentFragment(),d=l-t;for(;!a.done&&n;){let e=o.next().value;this._bindNodeInfo(e,a.value,a.id),e.style.top=`${36*d}px`,n--,d++,a=r.next(),h.appendChild(e)}this._nodesContainer.innerHTML="",this._nodesContainer.appendChild(h)}}