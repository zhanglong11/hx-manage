class NodeEnumerator{constructor(e){this._queue=[e]}next(){let e=this._queue.shift();return e?(this._queue=this._queue.concat(e.children),{done:!1,node:e}):{done:!0,node:null}}}class InternalTreeNode{constructor(e,t,i=0){this.id=e,this._data=t,this._level=i,this._collapsed=!0,this.children=[],this.parent=null,this._level=i,this._visible=!0}setCollapse(e){this._collapsed=e}setVisibility(e){this._visible=e}getData(){return this._data}isCollapsed(){return this._collapsed}isVisible(){return this._visible}addChild(e){this.children.push(e),e.parent=this,e._level=this._level+1}removeChild(e){let t=this.children.indexOf(e);return-1!=t&&(this.children.splice(t,1),e.parent=null,e._level=0),!0}enumerate(){return new NodeEnumerator(this)}cascade(e){let t=this.enumerate(),i=t.next();for(;!i.done;){let{node:l}=i;if(0==e(l))return!1;i=t.next()}return!0}isLeaf(){return!this.children.length}getLevel(){return this._level}}function addChildren(e,t,i){(t=t||[]).forEach(t=>{let l=new InternalTreeNode(t.key,t);e.addChild(l),i[l._level]||(i[l._level]=[]),i[l._level].push(l),addChildren(l,t.children,i)})}class InternalDelegate{constructor(e){this.instanceTree=e,this.model={id:e._modelId}}getRootId(){this.instanceTree._root.id}}export class InternalTree{constructor(e,t){this._data=t,this._modelId=e,this._root=new InternalTreeNode(t.key,t),this._levelHint={0:[this._root]},addChildren(this._root,t.children,this._levelHint),this._showingNodes=[this._root]}getDelegate(){return new InternalDelegate(this)}findNode(e,t){let i=this._levelHint[t];if(!i)return null;for(let t=0;t<i.length;t++)if(i[t].id===e)return i[t];return null}getNode(e){let t=null;return this._root.cascade(i=>i.id!=e||(t=i,!1)),t}getNodeName(e){let t="未知",i=this.getNode(e);return i&&(t=i._data.name),t}getNodeParentId(e){let t=this.getNode(e);return t&&t.parent?t.parent.id:null}setCollapse(e,t,i){let l=this.findNode(e,t);return l&&(l.setCollapse(i),this._refreshShowingNodes()),!0}setVisibility(e,t,i){let l=this.findNode(e,t);l&&(l.setVisibility(i),l.cascade(e=>e.setVisibility(i)))}enumerate(){return this._root.enumerate()}_refreshShowingNodes(){let e=[],t=[this._root];for(;t.length;){let i=t.pop();i.isCollapsed()||(t=t.concat([...i.children].reverse())),e.push(i)}this._showingNodes=e}getShowingNodes(){return this._showingNodes}}