const{DockingPanel:DockingPanel,Searchbox:Searchbox}=Bimfish.Viewing.UI;import{OnDemondTreeUI}from"./ui";let id=0;export class Panel extends DockingPanel{constructor(e,t,i){super(e.container,e.container.id+`-${id++}`,t,i),this.container.style.height="300px",this.container.style.width="240px",this.container.style.resize="",this.container.style.left="10px",this.container.style.top="10px",this.searchBox=new Searchbox(`$searchbox-${id}}`,e,{searchFunction:this.searchFunction.bind(this)}),this.searchBox.container.style.position="relative",this.container.appendChild(this.searchBox.container),this.createScrollContainer(i),this.scrollContainer.style.height="calc(100% - 105px)",this._tree=new OnDemondTreeUI(this.scrollContainer),this.footerInstance.resizeCallback=()=>{this._tree.recalcViewPortHeight(),this._tree.redraw()}}addModel(e,t){this._tree.addModel(e,t)}setVisible(e){super.setVisible(e),e&&(this._tree.recalcViewPortHeight(),this._tree.redraw())}searchFunction(e){return this._tree._trees.map(t=>{let i=t.getDelegate(),r=[];return t._root.cascade(t=>(t._data.name.indexOf(e)>-1&&r.push(t.id),!0)),{ids:r,delegate:i}}).filter(e=>e.ids.length>0)}onViewerResize(e,t,i,r,n,s){return super.onViewerResize(e,t,i,r,n,s),console.log("resizeDone"),!0}}