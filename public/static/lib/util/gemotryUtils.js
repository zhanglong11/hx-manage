import{range,getCylicalIndex}from"./functional";function isSameSide(e,n,l,t){const i=n.clone().sub(e),r=l.clone().sub(e),o=t.clone().sub(e),g=r.cross(i),a=o.cross(i);return g.dot(a)>=0}export function isPointInTriangle(e,n,l,t){return isSameSide(e,n,l,t)&&isSameSide(n,l,e,t)&&isSameSide(e,l,n,t)}export function isConvexCorner(e,n,l){let t=e.clone().sub(l),i=e.clone().sub(n);return t.cross(i).z>0}export function triangulation(e,n=range(0,e.length)){if(n.length<=3)return[...n];for(let l=0;l<n.length;l++){let t=n[l],i=n[getCylicalIndex(l-1,n.length)],r=n[getCylicalIndex(l+1,n.length)],o=e[t],g=e[i],a=e[r];if(isConvexCorner(o,g,a)){let c=!0;for(let t=0;t<n.length;t++){if(t==l||t==getCylicalIndex(l-1,n.length)||t==getCylicalIndex(l+1,n.length))continue;if(isPointInTriangle(g,o,a,e[n[getCylicalIndex(t,n.length)]])){c=!1;break}}if(c)return[i,t,r,...triangulation(e,[...n.slice(0,l),...n.slice(l+1)])]}else;}return[]}export function earClippingTriangulation(e){if(e.length<3)throw"points less than 3 can not be a polygon";if(3===e.length)return[0,1,2];let n=new Array(e.length).fill(1),l=new Array(e.length).fill(-1),t=new Array(e.length).fill(-1),i=new Array(e.length).fill(-1);for(let n=0;n<e.length;n++){let r=getCylicalIndex(n-1,e.length),o=getCylicalIndex(n+1,e.length),g=e[r];if(isConvexCorner(e[n],g,e[o])){t[n]=1,!0&&(l[n]=1)}else i[n]=1}let r=[],o=e.length;function g(l){let t=getCylicalIndex(l-1,e.length);return n[t]?t:g(t)}function a(l){let t=getCylicalIndex(l+1,e.length);return n[t]?t:a(t)}for(;o>3;)for(let e=0;e<l.length;e++){if(l[e]){let t=e,i=g(e),c=a(e);r.push(i,t,c),n[e]=-1,l[e]=-1,o--}}}